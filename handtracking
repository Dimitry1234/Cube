import cv2
import mediapipe as mp

# Initialize Mediapipe Hands and Drawing utilities
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

# Function to initialize the webcam
def initialize_webcam():
    return cv2.VideoCapture(0, cv2.CAP_DSHOW)

# Start webcam
webcam = initialize_webcam()

if not webcam.isOpened():
    print("Error: Unable to access the webcam.")
    exit()

# Initialize Mediapipe Hands model
hands = mp_hands.Hands()

while True:
    success, frame = webcam.read()
    
    if not success or frame is None:
        print("Error: Unable to read a frame from the camera. Trying to reopen...")
        webcam.release()
        webcam = initialize_webcam()
        if not webcam.isOpened():
            print("Failed to reopen camera. Exiting...")
            break
        continue

    # Check for black frames
    if not frame.any():
        print("Black frame detected. Trying to reopen camera...")
        webcam.release()
        webcam = initialize_webcam()
        if not webcam.isOpened():
            print("Failed to reopen camera. Exiting...")
            break
        continue

    # Convert frame to RGB for Mediapipe processing
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = hands.process(frame_rgb)

    # Draw hand landmarks if detected
    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

    # Display the processed frame
    cv2.imshow("Hand Detection", frame)

    # Break loop on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
webcam.release()
cv2.destroyAllWindows()
